<Application x:Class="Bot.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Bot" 
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:sb="clr-namespace:Delay;assembly=SplitButtonWpf">
    <Application.Resources>
        <ResourceDictionary>
            <BitmapImage UriSource="Asset/Image/splash.gif" x:Key="imgSplash" />
            <BitmapImage UriSource="Asset/Image/NoImage.jpg" x:Key="imgCantFindImage" />
            <BitmapImage UriSource="Asset/Image/img_20.png" x:Key="imgImage20" />
            <BitmapImage UriSource="Asset/Image/right_arrow16.gif" x:Key="imgRightArrow16" />
            <BitmapImage UriSource="Asset/Image/refresh.png" x:Key="imgRefresh20" />
            <BitmapImage UriSource="Asset/Image/close20.png" x:Key="imgClose20" />
            <BitmapImage UriSource="Asset/Image/flag0.png" x:Key="imgFlag0" />
            <BitmapImage UriSource="Asset/Image/flag1.png" x:Key="imgFlag1" />
            <BitmapImage UriSource="Asset/Image/flag2.png" x:Key="imgFlag2" />
            <BitmapImage UriSource="Asset/Image/flag3.png" x:Key="imgFlag3" />
            <BitmapImage UriSource="Asset/Image/flag4.png" x:Key="imgFlag4" />
            <BitmapImage UriSource="Asset/Image/flag5.png" x:Key="imgFlag5" />
            <BitmapImage UriSource="Asset/Image/cod_16.gif" x:Key="imgCod16" />
            <BitmapImage UriSource="Asset/Image/home_16.gif" x:Key="imgHome16" />
            <BitmapImage UriSource="Asset/Image/jhs_16.gif" x:Key="imgJhs16" />
            <BitmapImage UriSource="Asset/Image/mail_20.png" x:Key="imgMail20" />
            <BitmapImage UriSource="Asset/Image/rate_20.png" x:Key="imgRate20" />
            <BitmapImage UriSource="Asset/Image/notepad_16.png" x:Key="imgNotePad16" />
            <BitmapImage UriSource="Asset/Image/clear.png" x:Key="imgClear" />
            <BitmapImage UriSource="Asset/Image/option.png" x:Key="imgOption" />
            <BitmapImage UriSource="Asset/Image/loading.gif" x:Key="imgLoading" />
            <BitmapImage UriSource="Asset/Image/face_24.png" x:Key="imgFace24" />
            <BitmapImage UriSource="Asset/Image/emoji_all.png" x:Key="imgEmojiAll" />
            <BitmapImage UriSource="Asset/Image/wangwang_16.png" x:Key="imgWangWang16" />
            <BitmapImage UriSource="Asset/Image/folder_open_16.png" x:Key="imgFolderOpen16" />
            <BitmapImage UriSource="Asset/Image/folder_close_16.png" x:Key="imgFolderClose16" />
            <BitmapImage UriSource="Asset/Image/error_red_16.png" x:Key="imgErrorRed16" />
            <BitmapImage UriSource="Asset/Image/error_gray_16.png" x:Key="imgErrorGray16" />
            <BitmapImage UriSource="Asset/Image/yellow.ico" x:Key="iconYellow" />
            <BitmapImage UriSource="Asset/Image/red.ico" x:Key="iconRed" />
            <BitmapImage UriSource="Asset/Image/blue.ico" x:Key="iconBlue" />
            <BitmapImage UriSource="Asset/Image/gray.ico" x:Key="iconGray" />
            <Style TargetType="{x:Type sb:SplitButton}" x:Key="{x:Type sb:SplitButton}">
                <Setter Property="Padding" Value="20 5" />
            </Style>
            <Style TargetType="{x:Type Button}" x:Key="{x:Type Button}">
                <Setter Property="Padding" Value="20 5" />
                <Setter Property="Background" Value="#FFF0FFFF" />
            </Style>
            <ControlTemplate x:Key="tmplError">
                <Border BorderBrush="#FFFF0000" BorderThickness="1">
                    <Grid>
                        <AdornedElementPlaceholder Name="_el" />
                        <TextBlock Foreground="#FFFF0000" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,6,0" Text="{Binding [0].ErrorContent}" />
                    </Grid>
                </Border>
            </ControlTemplate>
            <Style x:Key="TreeViewItemFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <PathGeometry x:Key="TreeArrow">
                <PathGeometry.Figures>
                    <PathFigureCollection>
                        <PathFigure IsFilled="True"
                        StartPoint="0 0"
                        IsClosed="True">
                            <PathFigure.Segments>
                                <PathSegmentCollection>
                                    <LineSegment Point="0 6"/>
                                    <LineSegment Point="6 0"/>
                                </PathSegmentCollection>
                            </PathFigure.Segments>
                        </PathFigure>
                    </PathFigureCollection>
                </PathGeometry.Figures>
            </PathGeometry>

            <Style x:Key="ExpandCollapseToggleStyle"
       TargetType="{x:Type ToggleButton}">
                <Setter Property="Focusable"
            Value="False"/>
                <Setter Property="Width"
            Value="16"/>
                <Setter Property="Height"
            Value="16"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Width="16"
                        Height="16"
                        Background="Transparent"
                        Padding="5,5,5,5">
                                <Path x:Name="ExpandPath"
                          Fill="Transparent"
                          Stroke="#FF989898"
                          Data="{StaticResource TreeArrow}">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="135"
                                             CenterX="3"
                                             CenterY="3"/>
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                             Value="True">
                                    <Setter TargetName="ExpandPath"
                                Property="Stroke"
                                Value="#FF1BBBFA"/>
                                    <Setter TargetName="ExpandPath"
                                Property="Fill"
                                Value="Transparent"/>
                                </Trigger>

                                <Trigger Property="IsChecked"
                             Value="True">
                                    <Setter TargetName="ExpandPath"
                                Property="RenderTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="180"
                                                 CenterX="3"
                                                 CenterY="3"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="ExpandPath"
                                Property="Fill"
                                Value="#FF595959"/>
                                    <Setter TargetName="ExpandPath"
                                Property="Stroke"
                                Value="#FF262626"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="{x:Type TreeViewItem}"
       TargetType="{x:Type TreeViewItem}">
                <Setter Property="Background"
            Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment"
            Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment"
            Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Padding"
            Value="1,0,0,0"/>
                <Setter Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="FocusVisualStyle"
            Value="{StaticResource TreeViewItemFocusVisual}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="19"
                                          Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <ToggleButton x:Name="Expander"
                                  Style="{StaticResource ExpandCollapseToggleStyle}"
                                  IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
                                  ClickMode="Press"/>
                                <Border Name="Bd"
                            Grid.Column="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="PART_Header"
                                          ContentSource="Header"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Grid.ColumnSpan="2"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded"
                             Value="false">
                                    <Setter TargetName="ItemsHost"
                                Property="Visibility"
                                Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="HasItems"
                             Value="false">
                                    <Setter TargetName="Expander"
                                Property="Visibility"
                                Value="Hidden"/>
                                </Trigger>
                                <Trigger Property="IsSelected"
                             Value="true">
                                    <Setter TargetName="Bd"
                                Property="Background"
                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    <Setter Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected"
                                       Value="true"/>
                                        <Condition Property="IsSelectionActive"
                                       Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd"
                                Property="Background"
                                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                    <Setter Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled"
                             Value="false">
                                    <Setter Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="VirtualizingStackPanel.IsVirtualizing"
             Value="true">
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <SolidColorBrush Color="SkyBlue" x:Key="scSkyBlueBrush" />
            <SolidColorBrush Color="#ffffb0" x:Key="scLittleYellowBrush" />
            <SolidColorBrush Color="White" x:Key="scWhiteBrush" />
            <SolidColorBrush Color="GoldEnrod" x:Key="scGoldEnrodBrush" />
            <SolidColorBrush Color="PaleGoldenrod" x:Key="scPaleGoldenrodBrush" />
            <SolidColorBrush Color="LightYellow" x:Key="scLightYellowBrush" />
            <SolidColorBrush Color="#EEE" x:Key="scDisabledBackgroundBrush" />
            <SolidColorBrush Color="#AAA" x:Key="scDisabledBorderBrush" />
            <SolidColorBrush Color="#888" x:Key="scDisabledForegroundBrush" />
            <Style
				TargetType="{x:Type TabItem}"
				x:Key="tabLevel2">
                <Setter
					Property="Template">
                    <Setter.Value>
                        <ControlTemplate
							TargetType="{x:Type TabItem}">
                            <Grid>
                                <Border
									Name="Border"
									Margin="0,0,-4,0"
									BorderThickness="1,1,1,1"
									CornerRadius="4,4,0,0"
									Background="{StaticResource scLightYellowBrush}"
									BorderBrush="{StaticResource scGoldEnrodBrush}">
                                    <ContentPresenter
										Name="ContentSite"
										VerticalAlignment="Center"
										HorizontalAlignment="Center"
										ContentSource="Header"
										Margin="15,3,15,3"
										RecognizesAccessKey="True" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger
									Property="TabItem.IsSelected"
									Value="True">
                                    <Setter
										Property="Panel.ZIndex"
										Value="100" />
                                    <Setter
										TargetName="Border"
										Property="Background"
										Value="{StaticResource scPaleGoldenrodBrush}" />
                                    <Setter
										TargetName="Border"
										Property="BorderThickness"
										Value="1,1,1,0" />
                                </Trigger>
                                <Trigger
									Property="IsEnabled"
									Value="False">
                                    <Setter
										TargetName="Border"
										Property="Background"
										Value="{StaticResource scDisabledBackgroundBrush}" />
                                    <Setter
										TargetName="Border"
										Property="BorderBrush"
										Value="{StaticResource scDisabledBorderBrush}" />
                                    <Setter
										Property="Foreground"
										Value="{StaticResource scDisabledForegroundBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style
				TargetType="{x:Type TabItem}"
				x:Key="tabLevel1">
                <Setter
					Property="Template">
                    <Setter.Value>
                        <ControlTemplate
							TargetType="{x:Type TabItem}">
                            <Grid>
                                <Border
									Name="Border"
									Margin="0,0,-4,0"
									BorderThickness="1,1,1,1"
									CornerRadius="4,4,0,0"
									Background="{StaticResource scWhiteBrush}"
									BorderBrush="{StaticResource scSkyBlueBrush}">
                                    <ContentPresenter
										Name="ContentSite"
										VerticalAlignment="Center"
										HorizontalAlignment="Center"
										ContentSource="Header"
										Margin="15,3,15,3"
										RecognizesAccessKey="True" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger
									Property="TabItem.IsSelected"
									Value="True">
                                    <Setter
										Property="Panel.ZIndex"
										Value="100" />
                                    <Setter
										TargetName="Border"
										Property="Background"
										Value="{StaticResource scLittleYellowBrush}" />
                                    <Setter
										TargetName="Border"
										Property="BorderThickness"
										Value="1,1,1,0" />
                                </Trigger>
                                <Trigger
									Property="IsEnabled"
									Value="False">
                                    <Setter
										TargetName="Border"
										Property="Background"
										Value="{StaticResource scDisabledBackgroundBrush}" />
                                    <Setter
										TargetName="Border"
										Property="BorderBrush"
										Value="{StaticResource scDisabledBorderBrush}" />
                                    <Setter
										Property="Foreground"
										Value="{StaticResource scDisabledForegroundBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
